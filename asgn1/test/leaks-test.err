==30016== Memcheck, a memory error detector
==30016== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==30016== Using Valgrind-3.17.0 and LibVEX; rerun with -h for copyright info
==30016== Command: ./ydc
==30016== 
==30016== Invalid read of size 1
==30016==    at 0x406875: ubigint::divide_by_2() (ubigint.cpp:187)
==30016==    by 0x406A9B: udivide(ubigint const&, ubigint const&) (ubigint.cpp:211)
==30016==    by 0x406C1A: ubigint::operator/(ubigint const&) const (ubigint.cpp:217)
==30016==    by 0x40B223: bigint::operator/(bigint const&) const (bigint.cpp:103)
==30016==    by 0x40E025: do_arith(iterstack<bigint, std::vector<bigint, std::allocator<bigint> > >&, char) (main.cpp:41)
==30016==    by 0x40EA33: do_function(iterstack<bigint, std::vector<bigint, std::allocator<bigint> > >&, char) (main.cpp:103)
==30016==    by 0x40EE12: main (main.cpp:162)
==30016==  Address 0x5a2c89f is 1 bytes before a block of size 4 alloc'd
==30016==    at 0x4C2B788: operator new(unsigned long) (vg_replace_malloc.c:417)
==30016==    by 0x40A6E6: __gnu_cxx::new_allocator<unsigned char>::allocate(unsigned long, void const*) (new_allocator.h:127)
==30016==    by 0x40A1D9: allocate (allocator.h:197)
==30016==    by 0x40A1D9: std::allocator_traits<std::allocator<unsigned char> >::allocate(std::allocator<unsigned char>&, unsigned long) (alloc_traits.h:460)
==30016==    by 0x409C37: std::_Vector_base<unsigned char, std::allocator<unsigned char> >::_M_allocate(unsigned long) (stl_vector.h:346)
==30016==    by 0x408CAD: void std::vector<unsigned char, std::allocator<unsigned char> >::_M_realloc_insert<unsigned char const&>(__gnu_cxx::__normal_iterator<unsigned char*, std::vector<unsigned char, std::allocator<unsigned char> > >, unsigned char const&) (vector.tcc:440)
==30016==    by 0x407CE9: std::vector<unsigned char, std::allocator<unsigned char> >::push_back(unsigned char const&) (stl_vector.h:1198)
==30016==    by 0x40679C: ubigint::multiply_by_2() (ubigint.cpp:169)
==30016==    by 0x4069CC: udivide(ubigint const&, ubigint const&) (ubigint.cpp:203)
==30016==    by 0x406C1A: ubigint::operator/(ubigint const&) const (ubigint.cpp:217)
==30016==    by 0x40B223: bigint::operator/(bigint const&) const (bigint.cpp:103)
==30016==    by 0x40E025: do_arith(iterstack<bigint, std::vector<bigint, std::allocator<bigint> > >&, char) (main.cpp:41)
==30016==    by 0x40EA33: do_function(iterstack<bigint, std::vector<bigint, std::allocator<bigint> > >&, char) (main.cpp:103)
==30016== 
==30016== 
==30016== HEAP SUMMARY:
==30016==     in use at exit: 0 bytes in 0 blocks
==30016==   total heap usage: 189 allocs, 189 frees, 3,832 bytes allocated
==30016== 
==30016== All heap blocks were freed -- no leaks are possible
==30016== 
==30016== For lists of detected and suppressed errors, rerun with: -s
==30016== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
